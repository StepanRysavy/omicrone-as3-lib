package com.omicrone {		import com.adobe.images.JPGEncoder;		import flash.display.BitmapData;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.net.URLRequestHeader;	import flash.net.URLRequestMethod;	import flash.net.navigateToURL;	import flash.utils.ByteArray;		public class ImageToServer {				private var _bd:BitmapData;		private var _do;		private var _uploadLink:String;		private var _name:String;		private var _data:ByteArray;		private var _link;		private var _location;				private var _fceDone:Function;		private var _fceError:Function;				public function ImageToServer(mc, link:String, name:String, fDone:Function = null, fError:Function = null, width:Number = -1, height:Number = -1) {						Log.add("odeslání vybraného objektu " + mc + mc.name + " jako JPG na server " + link + " se jménem " + name, this);						_do = mc;			_name = name;						if (width == -1) width = _do.width;			if (height == -1) height = _do.height;						_bd = new BitmapData (width, height);			_bd.draw (_do);			_uploadLink = link;						_fceDone = fDone;			_fceError = fError;						encode ();		}				public function get link ():String {			if (_link == undefined || _link == null || _link == "") return null;			return _link;		}				private function encode () {						Log.add("kódování " + _do.name + " do JPG " + _name, this);						var jpg:JPGEncoder = new JPGEncoder (80);			_data = jpg.encode(_bd);						send ();		}				private function send () {						Log.add ("odesílání " + _do.name + " na server pomocí " + (_uploadLink + "?prefix=" + _name), this);						var loader:URLLoader = new URLLoader();			loader.addEventListener(Event.COMPLETE, serverResponse);			loader.addEventListener(IOErrorEvent.IO_ERROR, serverError);						if (_fceDone != null) loader.addEventListener(Event.COMPLETE, _fceDone);						var header:URLRequestHeader = new URLRequestHeader("Content-type", "application/octet-stream");			var request:URLRequest = new URLRequest(_uploadLink + "?name=" + _name);			request.requestHeaders.push(header);			request.method = URLRequestMethod.POST;			request.data = _data;			//navigateToURL(request, "_blank");						loader.load(request);		}				private function serverResponse (e:Event) {			Log.add ("odeslání bylo v pořádku, byla vygenerována nová adresa souboru " + e.target.data, this);						if (e.target.data != undefined) _link = e.target.data;						if (_fceDone != null) _fceDone;		}				private function serverError (e:IOErrorEvent) {			Log.add ("chyba serveru " + e.text, this);						if (_fceError != null) _fceError;		}	}}