/**		Sender by oMicrone	- správa odesílání proměnných na server		ChangeLog:	0.1 - ADDED: 	*/package com.omicrone {		import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.IOErrorEvent;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.net.URLRequestMethod;	import flash.net.URLVariables;		import com.omicrone.Log;		public class Sender extends EventDispatcher {				private static var senders:Array = new Array ();		private static var settings:Object = {};				/**		 * 		 * @param s String, udává hledanou proměnnou		 * @return * libovolný objekt nebo data			Umožňuje ukládání objektů do nastavení podle klíče		*/		public static function getSetting (s:String):* {			if (settings[s] != undefined) {				return settings[s];			} else {				return null;			}		}				/**			Vrací požadovaný objekt z nastavení podle klíče		*/		public static function setSetting (s:String, o:*) {			trace ("  ~ nastavuji", s, "na hodnotu", o);			settings[s] = o;		}				/**			Vytvoří nový objekt k odeslání		*/		public static function create (link:String, name:String = "defaultSender", gets:* = null, posts:* = null):Object {			trace ("  ~ vytvářím nový sender objekt", name);						var sender:Object = {}			senders.push (sender);						sender.name = name;			sender.link = link;						if (gets != null) {				if (com.omicrone.Commons.getClass (gets) == String) {					change (sender, "GET", gets);				} else if (com.omicrone.Commons.getClass (gets) == URLVariables) {					sender.GET = gets;				}			} else {				sender.GET = new URLVariables();			}						if (posts != null) {				if (com.omicrone.Commons.getClass (posts) == String) {					change (sender, "POST", posts);				} else if (com.omicrone.Commons.getClass (posts) == URLVariables) {					sender.POST = posts;				}			} else {				sender.POST = new URLVariables();			}						sender.type = null;			sender.response = null;			sender.isSent = false;						return sender;		}				/**			Vrátí požadovaný sender objekt podle jména		*/			public static function get (name:String):Object {			trace ("  ~ hledám sender objekt", name);						for (var i = 0; i < senders.length; i++) {				if (senders[i].name == name) {					return getByID (i);				}			}						return null;		}				/**			Vrátí sender objekt podle id		*/		public static function getByID (id:uint):Object {			trace ("  ~ vracím sender objekt");						return senders[id];		}				/**			Aktualizace sender objektu		*/		public static function change (sender:*, param:String, value:*):Boolean {			if (com.omicrone.Commons.getClass(sender) == String) sender = get (sender);			trace ("  ~ menim sender objekt", sender.name, "v promenne", param, "na", value);						if (sender[param] == undefined) return false;						if (param == "POST" || param == "GET") {								trace ("  ~ menim sender objekt", sender.name, "v odesílaných proměných");								if (com.omicrone.Commons.getClass (value) == URLVariables) {					value = value.toString();				}								var vars:Array = value.split("&");								for (var i=0; i < vars.length; i++) {					var varsSplit:Array = vars[i].split("=");					update(sender, param, varsSplit[0], varsSplit[1]);				}								return true;			}						sender[param] = value;						return true;		}				/**			Přidá nebo aktualizuje proměnnou pro GET nebo POST		*/		public static function update (sender:*, param:String, vars:String, value:*) {			if (com.omicrone.Commons.getClass(sender) == String) sender = get (sender);			trace ("  ~ aktualizuji sender objekt", sender.name, "v promenne", param, "u hodnoty", vars, "na hodnotu", value);						sender[param][vars] = value;		}				/**			Odešle požadovaný sender object		*/		public static function send (sender:*, eventMC:* = null, event:String = "sent", fce:Function = null):void {			if (com.omicrone.Commons.getClass(sender) == String) sender = get (sender);			trace ("  ~ odesílám", sender.name);						var parts:Array = sender.link.split("?");						var link:String = parts[0];						if (parts.length > 1) change (sender, "GET", parts[1]);						if (sender.GET.toString().length > 0) {				link += "?" + sender.GET.toString();			}						var request:URLRequest = new URLRequest(link);						if (sender.POST.toString().length > 0) {				request.method = URLRequestMethod.POST;				request.data = sender.POST;			} else {				request.method = URLRequestMethod.GET;			}						var loader:URLLoader = new URLLoader();			loader.addEventListener(Event.COMPLETE, serverResponse);			if (fce != null) loader.addEventListener(Event.COMPLETE, fce);			loader.addEventListener(IOErrorEvent.IO_ERROR, serverError);			loader.load(request);						function serverResponse (e:Event):void {				trace ("  ~ sender", sender.name, "odeslal data na", link);								sender.isSent = true;								if (e.target.data != undefined) {					sender.response = e.target.data;					Log.add(sender.response, "SENDER");				}				if (eventMC != null) eventMC.dispatchEvent (new Event (event));			}						function serverError (e:IOErrorEvent):void {				trace ("  ~ sender neodeslal data, chyba serveru: ", e.errorID, e.type, e.text);								sender.isSent = true;								if (e.target.data != undefined) sender.response = e.target.data;				if (eventMC != null) eventMC.dispatchEvent (new Event (event));			}		}	}}