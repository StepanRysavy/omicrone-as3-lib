package com.omicrone.display {		import com.omicrone.Log;		import flash.display.DisplayObject;	import flash.events.Event;		public class DisplayStateManager {				private var _mc:DisplayObject;		private var _dm:DisplayManager;		private var _states:Array;		private var _currentState:String				public function DisplayStateManager(mc:DisplayObject, dm:DisplayManager = null) {			_mc = mc;			if (dm == null) {				_dm = new DisplayManager (mc);			} else {				_dm = dm;			}						//Log.add("init", this.toString());						_states = new Array ();						add ("init");			add ("show", null, null, 1.01);			add ("hide", null, null, 0);						change ("init");			_currentState = "init";		}				// get set				public function get stateCurrent ():String {			return _currentState;		}				public function get currentStateEvents ():DisplayManager {			return _dm;		}				public function get mc():DisplayObject {			return _mc;		}				// public functions				public function add (stateName:String, x:* = null, y:* = null, alpha:* = null, rotation:* = null, xscale:* = null, yscale:* = null, fce:Function = null):Boolean {						if (get (stateName) != null) return false;						if (x == null) x = _mc.x;			if (y == null) y = _mc.y;			if (rotation == null) rotation = _mc.rotation;			if (xscale == null) xscale = _mc.scaleX;			if (yscale == null) yscale = _mc.scaleY;			if (alpha == null) alpha = _mc.alpha;						_states.push( new DisplayState (_states.length, stateName, x, y, rotation, xscale, yscale, alpha, fce));			//Log.add("nový stav " + stateName + " pro " + _mc.name, this.toString());						return true;		}				public function update (stateName:String, x:* = null, y:* = null, alpha:* = null, rotation:* = null, xscale:* = null, yscale:* = null, fce:Function = null):Boolean {						var ds:DisplayState = get (stateName);						if (ds == null) return false;						if (x != null) ds.x = x;			if (y != null) ds.y = y;			if (rotation != null) ds.rotation = rotation;			if (xscale != null) ds.xscale = xscale;			if (yscale != null) ds.yscale = yscale;			if (alpha != null) ds.alpha = alpha;			if (fce != null) ds.functionAtDone = fce;						//Log.add("aktualizovaný stav " + stateName + " pro " + _mc.name, this.toString());						return true;		}				public function change (stateName:String = null, speed:Number = 5, fce:Function = null):Boolean {						if (_currentState == stateName) return false;						var ds:DisplayState = get (stateName);			if (ds == null) return false;			if (fce != null) ds.functionAtDone = fce;						//Log.add("změna stavu " + _mc.name + " na " + stateName, this.toString());						_currentState = stateName;						if (ds.functionAtDone != null) _dm.addEventListener(DisplayManager.eDone, ds.functionAtDone);			_dm.addEventListener(DisplayManager.eDone, eventDone);						_dm.x (ds.x, speed);			_dm.y (ds.y, speed);			_dm.scaleY (ds.yscale, speed);			_dm.scaleX (ds.xscale, speed);			_dm.rotation (ds.rotation, speed);			_dm.alpha (ds.alpha, speed/50);						function eventDone (e:Event):void {				_dm.removeEventListener(DisplayManager.eDone, eventDone);				if (ds.functionAtDone != null) _dm.removeEventListener(DisplayManager.eDone, ds.functionAtDone);			}						return true;		}				public function param (p:String):* {			return _dm.param (p);		}				public function stateExists (s:String):Boolean {			for (var i:uint = 0; i < _states.length; i++) {				var ds:DisplayState = _states[i];								if (ds.stateName == s) return true;			}						return false;		}				// private functions				private function get (stateName:String = null):DisplayState {						if (stateName == null) return get ("displayObjectDefaultState");;						for (var i:uint = 0; i < _states.length; i++) {				var ds:DisplayState = _states[i] as DisplayState;				if (ds.stateName == stateName) return ds;			}			return null;		}				// override				public function toString():String {			return "[" + _mc.name + " :: DisplayStateManager]";		}	}}